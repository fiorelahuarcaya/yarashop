<div class="admin-client">
    <h3 class="large-text">Administraci√≥n de Clientes</h3>
    <div class="table-modificator">
        <div class="mostrar">
            <p class="small-text">Mostrar:</p>
            <select class="small-text" name="cantidad-pag" id="cantidad-pag">
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="25">25</option>
                <option value="50">50</option>
                <option value="100">100</option>
            </select>
        </div>
    </div>
</div>

<script is:inline>


    const headers = ["ID", "Nombre","Correo","Estado", "Plan","Acciones"];
    const sectionTM = document.getElementsByClassName("table-modificator")[0];
        // creates a <table> element and a <tbody> element
        const tbl = document.createElement("table");
        const tblBody = document.createElement("tbody");
        const rows = document.getElementById("cantidad-pag");
    
    const bodegueros = [];
    
    fetch(`http://localhost:9000/api/BodMongo`).then((response) => {
        response.json().then((data) => {

            console.log(data[0].idBodeguero);
            for (let i = 0; i <= data.length; i++) {
                const row = document.createElement("tr");
                if(i==0){
                    for (let j = 0; j < headers.length; j++) {
                        const cell = document.createElement("td");
                        const cellText = document.createTextNode(headers[j]);
                        cell.appendChild(cellText);
                        if(j==headers.lenght-1){
                            cell.colSpan = 2;
                        }
                        row.appendChild(cell);
                    }
                }else{
                    const cellID = document.createElement("td");
                    const cellTextID = document.createTextNode(data[i-1].idBodeguero);
                    cellID.appendChild(cellTextID);
                    row.appendChild(cellID);

                    const cellNombre = document.createElement("td");
                    var textNombre = document.createElement("INPUT");
                    textNombre.setAttribute("type", "text");
                    textNombre.setAttribute("value", data[i-1].nombreCompleto);
                    textNombre.id = "name"+data[i-1].idBodeguero;
                    cellNombre.appendChild(textNombre);
                    row.appendChild(cellNombre);

                    const cellCorreo = document.createElement("td");
                    const textCorreo =  document.createElement("INPUT");
                    textCorreo.setAttribute("type", "text");
                    textCorreo.setAttribute("value", data[i-1].correo);
                    textCorreo.id = "correo"+data[i-1].idBodeguero;
                    cellCorreo.appendChild(textCorreo);
                    row.appendChild(cellCorreo);

                    const cellEstado = document.createElement("td");
                    const cellTextEstado = document.createTextNode("Activo");
                    cellEstado.appendChild(cellTextEstado);
                    row.appendChild(cellEstado);

                    const cellPlan = document.createElement("td");
                    const cellTextPlan = document.createTextNode(data[i-1].suscripcion);
                    cellPlan.appendChild(cellTextPlan);
                    row.appendChild(cellPlan);

                    const cellDelete = document.createElement("td");
                    let btnDel = document.createElement("button");
                    btnDel.className += "btn2";
                    btnDel.innerHTML = "Delete";
                    btnDel.onclick = function(){
                        fetch(`http://localhost:9000/api/BodMongo/${data[i-1].idBodeguero}`, { method: "DELETE" }).then(
                            () => {
                            alert("Se ha eliminado el usuario con ID:" + data[i-1].idBodeguero);
                            setTimeout('', 1000);
                            location.reload();
                            }
                        );
                    };
                    cellDelete.appendChild(btnDel);
                    
                    
                    row.appendChild(cellDelete);

                    const cellUpdate = document.createElement("td");
                    let btnUp = document.createElement("button");
                    btnUp.className += "btn1";
                    btnUp.innerHTML = "Update";
                    btnUp.onclick = function() {
                        let nombreOB = document.getElementById(`name${data[i-1].idBodeguero}`).value;
                        let correoOB = document.getElementById(`correo${data[i-1].idBodeguero}`).value;

                        // Example POST method implementation:
                        async function postData(url = "", data = {}) {
                            // Default options are marked with *
                            const response = await fetch(url, {
                            method: "PUT",
                            mode: "cors",
                            cache: "no-cache", 
                            credentials: "same-origin", 
                            headers: {
                                "Content-Type": "application/json",

                            },
                            redirect: "follow", // manual, *follow, error
                            referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                            body: JSON.stringify(data), // body data type must match "Content-Type" header
                            });
                            return response.json(); // parses JSON response into native JavaScript objects
                        }

                        postData(`http://localhost:9000/api/BodMongo/${data[i-1].idBodeguero}`, {
                            nombreCompleto: nombreOB,
                            correo: correoOB,
                        }).then((data) => {
                            console.log(data); // JSON data parsed by `data.json()` call
                            alert("El usuario ha sido actualizado");
                            setTimeout('', 1000);
                            location.reload();
                        });
                    }
                    cellUpdate.appendChild(btnUp);
                    row.appendChild(cellUpdate);

                }
                tblBody.appendChild(row);
                
            }

            // put the <tbody> in the <table>
            tbl.appendChild(tblBody);
            // appends <table> into <body>
            sectionTM.appendChild(tbl);
            // sets the border attribute of tbl to '2'
            tbl.setAttribute("border", "0");

        });
        });

        // creating all cells
        
            
</script>

<style>
    .admin-client{
        /* Auto layout */
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        padding: 32px 24px;
        gap: 0px;

        /* Light */
        background: var(--light);
    }

    .admin-client .table-modificator{
        /* Auto layout */
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        gap: 16px;

        text-align: center;
    }

    .table-modificator .mostrar{
        /* Auto layout */
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 8px;
    }

    :global(tr) {
        border-bottom: solid 1px var(--dark);
    }

    .table-modificator :global(td) {
        min-width: 60px;
        padding: 8px;
        /* border-bottom: solid 1px var(--dark); */
    }
</style>
